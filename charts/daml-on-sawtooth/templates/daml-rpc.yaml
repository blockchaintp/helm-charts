# kubetpl:syntax:go-template
{{ if .Values.sawtooth.daml.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.sawtooth.networkName}}-daml-rpc
  namespace: {{.Values.sawtooth.namespace}}
  labels:
    app: {{.Values.sawtooth.networkName}}-daml-rpc
    daml: {{.Values.sawtooth.networkName}}-daml-rpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Values.sawtooth.networkName}}-daml-rpc
      daml: {{.Values.sawtooth.networkName}}-daml-rpc
  template:
    metadata:
      labels:
        app: {{.Values.sawtooth.networkName}}-daml-rpc
        daml: {{.Values.sawtooth.networkName}}-daml-rpc
    spec:
      serviceAccountName: {{.Values.sawtooth.networkName}}-sa
      containers:
      - name: postgres
        image: {{.Values.images.postgres}}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
      - name: daml-json-api
        image: {{.Values.images.daml_json_api}}
        imagePullPolicy: {{.Values.sawtooth.containers.jsonapi.imagePullPolicy}}
        ports:
        - containerPort: {{.Values.sawtooth.ports.jsonapi}}
        env:
          - name: LEDGER_HOST
            value: localhost
          - name: LEDGER_PORT
            value: {{.Values.sawtooth.ports.damlrpc}}
          - name: HTTP_PORT
            value: {{.Values.sawtooth.ports.jsonapi}}
          - name: PACKAGE_RELOAD_INTERVAL
            value: {{.Values.sawtooth.containers.jsonapi.packageReloadInterval}}
          - name: WAIT_FOR_TIME
            value: {{.Values.sawtooth.containers.jsonapi.waitTimeSeconds}}
          {{ if .Values.sawtooth.containers.validator.env }}
          {{- toYaml .Values.sawtooth.containers.validator.env | nindent 10 }}
          {{ end }}
      - name: daml-rpc
        image: {{.Values.images.daml_rpc}}
        command: [ "bash", "-xc"]
        args:
        - |
          sleep {{.Values.sawtooth.client_wait}}
          /opt/sawtooth-daml-rpc/entrypoint.sh \
            --participant port={{.Values.sawtooth.ports.damlrpc}},address=0.0.0.0,participant-id={{.Values.sawtooth.networkName}},server-jdbc-url=jdbc:postgresql://localhost/postgres?user=postgres \
            --log-level warn \
            --max-outstanding-batches 2 \
            --max-ops-per-batch 1000 \
            --connect tcp://{{.Values.sawtooth.networkName}}-validator:{{.Values.sawtooth.ports.sawcomp}} \
        {{- if .Values.sawtooth.daml.extra_args.enabled }}
            {{.Values.sawtooth.daml.extra_args.arg_str}}
        {{- end }}
        resources:
          limits:
            cpu: "250m"
          requests:
            cpu: "50m"
        ports:
        - containerPort: {{.Values.sawtooth.ports.damlrpc}}
          name: daml-ledger-api
        volumeMounts:
        - mountPath: "/etc/sawtooth"
          name: sawtooth-etc
      volumes:
        - name: sawtooth-etc
          hostPath:
            type: DirectoryOrCreate
            path: {{.Values.sawtooth.volumes.hostPathBaseDir}}/{{.Values.sawtooth.namespace}}/{{.Values.sawtooth.networkName}}/sawtooth-etc
{{ end }}
---
