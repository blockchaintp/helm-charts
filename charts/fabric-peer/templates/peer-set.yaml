{{ $fabricHome := "/etc/hyperledger" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fabric-peer.names.server" . }}
  labels: {{ include "fabric-peer.labels" .| nindent 4}}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "fabric-peer.labels.matchLabels" . | nindent 6 }}
      component: peer
  template:
    metadata:
      labels: {{ include "fabric-peer.labels.matchLabels" . | nindent 8 }}
        component: peer
    spec:
      serviceAccountName: {{ include "lib.serviceAccountName" . }}
      automountServiceAccountToken: false
      affinity: {{ include "lib.safeToYaml" .Values.affinity | nindent 8 }}
      containers:
        - name: peer
          {{- include "lib.image" (dict "imageRoot" .Values.image "global" .Values.global ) | nindent 10 }}
          env:
            - name: FABRIC_LOGGING_SPEC
              value: {{ .Values.logLevel }}
            - name: FABRIC_CFG_PATH
              value: {{ $fabricHome }}/{{ include "fabric-peer.names.server" . }}
          command: [ "/bin/sh", "-c"]
          args:
            - |
              while [ ! -r {{ $fabricHome }}/bootstrap.done ]; do
                echo "Waiting for bootstrap to complete"
                sleep 5
              done

              exec peer node start
          volumeMounts:
            - name: ca-cert
              mountPath: /external/ca-cert
            - name: fabric-home
              mountPath: {{ $fabricHome }}
        - name: register-enroll
          {{- include "lib.image" (dict "imageRoot" .Values.caClient.image "global" .Values.global ) | nindent 10 }}
          command: [ "/bin/sh", "-exc"]
          args:
            - |
              if [ ! -r {{ $fabricHome }}/bootstrap.done ]; then
                rm -rf {{ $fabricHome }}/*
              else
                exit 0
              fi

              while ! getent hosts {{ include "fabric-peer.names.ca" . }}; do
                echo "Waiting for ca to be resolvable"
                sleep 5
              done

              # Enroll the CA Admin if not already done
              fabric-ca-client enroll \
                -u https://admin:adminpw@{{ include "fabric-peer.names.ca" . }} \
                --caname {{ include "fabric-peer.names.ca" . }} \
                --tls.certfiles /external/ca-cert/ca-cert.pem

              # Register principal for this node
              fabric-ca-client register \
                --caname {{ include "fabric-peer.names.ca" . }} \
                --id.name {{ include "fabric-peer.names.server" . }} \
                --id.secret {{ include "fabric-peer.names.server" . }} \
                --id.type peer \
                --tls.certfiles /external/ca-cert/ca-cert.pem || true

              # Register the pricipal for this org's admin
              fabric-ca-client register \
                --caname {{ include "fabric-peer.names.ca" . }} \
                --id.name {{ include "fabric-peer.names.server" . }}Admin \
                --id.secret {{ include "fabric-peer.names.server" . }}Admin \
                --id.type admin \
                --tls.certfiles /external/ca-cert/ca-cert.pem || true

              # Enroll the node MSP
              fabric-ca-client enroll \
                -u https://{{ include "fabric-peer.names.server" . }}:{{ include "fabric-peer.names.server" . }}@{{ include "fabric-peer.names.ca" . }} \
                --caname {{ include "fabric-peer.names.ca" . }} \
                -M "{{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/msp" \
                --csr.hosts {{ include "fabric-peer.names.server" . }} \
                --csr.hosts {{ include "fabric-peer.names.server" . }}.{{ .Release.Namespace }} \
                --csr.hosts {{ include "fabric-peer.names.server" . }}.{{ .Release.Namespace }}.svc.cluster.local \
                --csr.hosts localhost \
                --tls.certfiles /external/ca-cert/ca-cert.pem

              mv {{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/msp/keystore/*_sk \
                {{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/msp/keystore/server.key

              cp /msp-config/config.yaml \
                {{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/msp/

              # Generate Peer TLS
              fabric-ca-client enroll \
                -u https://{{ include "fabric-peer.names.server" . }}:{{ include "fabric-peer.names.server" . }}@{{ include "fabric-peer.names.ca" . }} \
                --caname {{ include "fabric-peer.names.ca" . }} \
                -M "{{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/tls" \
                --enrollment.profile tls \
                --csr.hosts {{ include "fabric-peer.names.server" . }} \
                --csr.hosts {{ include "fabric-peer.names.server" . }}.{{ .Release.Namespace }} \
                --csr.hosts {{ include "fabric-peer.names.server" . }}.{{ .Release.Namespace }}.svc.cluster.local \
                --csr.hosts localhost \
                --tls.certfiles /external/ca-cert/ca-cert.pem

              mv {{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/tls/keystore/*_sk \
                {{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/tls/keystore/server.key

              # Enroll the Admin MSP
              fabric-ca-client enroll \
                -u https://{{ include "fabric-peer.names.server" . }}Admin:{{ include "fabric-peer.names.server" . }}Admin@{{ include "fabric-peer.names.ca" . }} \
                --caname {{ include "fabric-peer.names.ca" . }} \
                -M "{{ $fabricHome}}/admin@{{ include "fabric-peer.names.server" . }}/msp" \
                --tls.certfiles /external/ca-cert/ca-cert.pem

              cp /msp-config/config.yaml \
                {{ $fabricHome}}/admin@{{ include "fabric-peer.names.server" . }}/msp/

              cp /peer-config/core.yaml \
                {{ $fabricHome}}/{{ include "fabric-peer.names.server" . }}/

              touch {{ $fabricHome }}/bootstrap.done

              find {{ $fabricHome }} -type f
              exec tail -f /dev/null
          volumeMounts:
            - name: ca-cert
              mountPath: /external/ca-cert
            - name: fabric-home
              mountPath: {{ $fabricHome }}
            - name: msp-config
              mountPath: /msp-config
            - name: peer-config
              mountPath: /peer-config
      volumes:
        - name: fabric-home
          emptyDir: {}
        - name: ca-cert
          configMap:
            name: {{ include "fabric-peer.names.ca-cert" . }}
        - name: msp-config
          configMap:
            name: {{ include "fabric-peer.names.msp-config" . }}
        - name: peer-config
          configMap:
            name: {{ include "fabric-peer.names.peer-config" . }}
