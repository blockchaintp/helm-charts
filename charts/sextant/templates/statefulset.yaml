---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "sextant.fullname" . }}
  namespace: {{.Release.Namespace}}
  labels:
{{ include "sextant.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "sextant.labels" .| indent 6}}
  serviceName: {{ include "sextant.fullname" . }}
  template:
    metadata:
      labels:
{{ include "sextant.labels" .| indent 8}}
    spec:
      serviceAccountName: {{ include "sextant.serviceAccountName" . }}
      containers:
        {{- if .Values.postgres.enabled }}
        - name: postgres
          image: "{{.Values.postgres.image.repository}}:{{.Values.postgres.image.tag}}"
          imagePullPolicy: {{.Values.postgres.image.pullPolicy }}
          ports:
          - containerPort: {{.Values.postgres.port }}
          env:
          - name: PGDATA
            value: /data/sextant
          - name: POSTGRES_PASSWORD
            {{- if .Values.postgres.existingPasswordSecret }}
            valueFrom:
              secretKeyRef:
                name: {{.Values.postgres.existingPasswordSecret}}
                key: password
            {{- else }}
            value: {{ .Values.postgres.password }}
            {{- end }}
          volumeMounts:
            - mountPath: /data
              name: "pgdata"
        {{- end }}
        - name: api
          image: "{{.Values.api.image.repository}}:{{.Values.api.image.tag}}"
          imagePullPolicy: {{.Values.api.image.pullPolicy}}
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          env:
            - name: PORT
              value: "8080"
            - name: NODE_ENV
              value: production
            - name: LOGGING
              value: {{ default "1" .Values.logging |quote }}
            - name: POSTGRES_USER
              value: {{ default "postgres" .Values.postgres.user }}
            - name: INITIAL_PASSWORD
              {{- if .Values.intialPassword }}
              value: {{ .Values.initialPassword | quote}}
              {{- else }}
              value: {{ include "sextant.randomPassword" .}}
              {{- end }}
            - name: INITIAL_USER
              value: {{ default "admin" .Values.initialUser}}
            - name: POSTGRES_PASSWORD
              {{- if .Values.postgres.existingPasswordSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{.Values.postgres.existingPasswordSecret}}
                  key: password
              {{- else }}
              value: {{ .Values.postgres.password }}
              {{- end }}
            - name: POSTGRES_DB
              value: {{ default "postgres" .Values.postgres.database }}
            - name: POSTGRES_SERVICE_HOST
              value: {{ default "localhost" .Values.postgres.host }}
            - name: POSTGRES_SERVICE_PORT
              value: {{ default "5432" .Values.postgres.port | quote }}
            {{- if .Values.postgres.tls }}
            - name: POSTGRES_TLS
              value: {{ .Values.postgres.tls | quote }}
            {{- end }}
        - name: frontend
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          ports:
            - containerPort: 8081
              protocol: TCP
          resources: {}
          env:
            - name: PORT
              value: "8081"
        - name: router
          image: "{{ .Values.noxy.image.repository }}:{{ .Values.noxy.image.tag }}"
          imagePullPolicy: {{ .Values.noxy.image.pullPolicy }}
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: NOXY_DEFAULT_HOST
              value: localhost
            - name: NOXY_DEFAULT_PORT
              value: "8081"
            - name: NOXY_API_FRONT
              value: /api/v1
            - name: NOXY_API_HOST
              value: localhost
            - name: NOXY_API_PORT
              value: "8080"
            - name: NOXY_PROXY_FRONT
              value: /proxy
            - name: NOXY_PROXY_HOST
              value: localhost
            - name: NOXY_PROXY_PORT
              value: "8080"
      restartPolicy: "Always"
      volumes:
{{- if not .Values.postgres.persistence.enabled }}
        - name: "pgdata"
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: "pgdata"
        {{- if .Values.postgres.persistence.annotations }}
        annotations: {{- toYaml .Values.postgres.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes: {{- toYaml .Values.postgres.persistence.accessModes | nindent 10 }}
        storageClassName: {{ default "gp2" .Values.postgres.persistence.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size | quote }}
{{- end }}
