---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "besu.fullname" . }}-genesis
  namespace: {{.Release.Namespace}}
  labels:
{{ include "besu.labels" . | indent 4 }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
{{ include "besu.selectorLabels" . |indent 8 }}
    spec:
      serviceAccountName: {{ include "besu.serviceAccountName" . }}
      automountServiceAccountToken: true
      restartPolicy: Never
      containers:
        - name: rpc-keys
          image: "{{.Values.besu.image.repository }}:{{ .Values.besu.image.tag }}"
          imagePullPolicy: {{ .Values.besu.image.imagePullPolicy }}
          command:
            - bash
            - -xc
          args:
            - |
              curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl \
                -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              ./kubectl get secret {{ include "daml.fullname" . }}-rpc-keys
              if [ $? -ne 0 ]; then
                mkdir -p /tmp/keys
                for replica in $(seq 0 {{.Values.daml.rpcCount}}); do
                  /opt/besu/bin/besu public-key export | tail -1 >> /tmp/keys/{{ include "daml.fullname" . }}-rpc-$replica.pub
                  mv /opt/besu/key /tmp/keys/{{ include "daml.fullname" . }}-rpc-$replica
                done
                /opt/besu/bin/besu public-key export | tail -1 >> /tmp/keys/{{ include "daml.fullname" . }}-repeater.pub
                mv /opt/besu/key /tmp/keys/{{ include "daml.fullname" . }}-repeater
                ./kubectl create secret generic {{include "daml.fullname" .}}-rpc-keys \
                  --namespace {{.Release.Namespace}} \
                  --from-file=/tmp/keys
                rm -rf /tmp/keys
              fi
{{- if .Values.besu.seedNetwork }}
        - name: genesis
          image: "{{.Values.besu.image.repository }}:{{ .Values.besu.image.tag }}"
          securityContext:
            runAsUser: 0
          imagePullPolicy: {{ .Values.besu.image.imagePullPolicy }}
          volumeMounts:
            - name: genesis-config
              mountPath: /genesis-config
          command:
            - bash
            - -c
          args:
            - |
              curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl \
                -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              ./kubectl get cm {{ include "besu.fullname" .}}-genesis
              if [ $? -ne 0 ]; then
                mkdir -p /tmp/genesis
                /opt/besu/bin/besu operator generate-blockchain-config \
                  --config-file=/genesis-config/config.json --to=/tmp/genesis
                ./kubectl create configmap --namespace {{ .Release.Namespace }} {{ include "besu.fullname" . }}-genesis --from-file=genesis.json=/tmp/genesis/genesis.json

                count=0
                secret_args=()
                pubkey_args=()
                enode_args=()
                for f in /tmp/genesis/keys/*; do
                  if [ -d ${f} ]; then
                    sed 's/^0x//' ${f}/key.pub > ${f}/enode.key
                    secret_args[$count]="--from-file={{include "besu.fullname" .}}-$count=${f}/key.priv"
                    pubkey_args[$count]="--from-file={{include "besu.fullname" .}}-$count.pub=${f}/key.pub"
                    enode_args[$count]="--from-file={{include "besu.fullname" .}}-$count.enode=${f}/enode.key"
                    count=$((count + 1))
                  fi
                done
                ./kubectl create secret generic {{include "besu.fullname" .}}-keys --namespace {{.Release.Namespace}} \
                  "${secret_args[@]}" "${pubkey_args[@]}"
                ./kubectl create secret generic {{include "besu.fullname" .}}-pubkeys --namespace {{.Release.Namespace}} \
                  "${pubkey_args[@]}"
                ./kubectl create secret generic {{include "besu.fullname" .}}-enode --namespace {{.Release.Namespace}} \
                  "${enode_args[@]}"
              fi
      volumes:
        - name: genesis-config
          configMap:
            name: {{ include "besu.fullname" . }}-genesis-cm
{{- end }}
